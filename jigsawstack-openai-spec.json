{
"openapi": "3.1.0",
"info": {
"title": "JigsawStack API",
"version": "1.0.0",
"description": "JigsawStack API Documentation",
"contact": {
"name": "JigsawStack Support",
"url": "https://jigsawstack.com"
}
},
"servers": [
{
"url": "https://api.jigsawstack.com/v1",
"description": "Default server"
}
],
"paths": {
"/ai/object_detection": {
"post": {
"summary": "POST /ai/object_detection",
"operationId": "post_ai_object_detection",
"parameters": [],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
},
"requestBody": {
"required": true,
"content": {
"application/json": {
"schema": {
"type": [
"object"
],
"properties": {
"url": {
"type": [
"string"
]
},
"file_store_key": {
"type": [
"string"
]
}
},
"required": []
}
}
}
}
}
},
"/ai/prediction": {
"post": {
"summary": "POST /ai/prediction",
"operationId": "post_ai_prediction",
"parameters": [],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
},
"requestBody": {
"required": true,
"content": {
"application/json": {
"schema": {
"type": [
"object"
],
"properties": {
"dataset": {
"type": [
"array"
],
"items": {
"type": [
"object"
],
"properties": {
"date": {
"type": [
"string"
]
},
"value": {
"oneOf": [
{
"type": [
"number"
]
},
{
"type": [
"string"
]
}
]
}
},
"required": [
"date",
"value"
]
},
"minItems": 5,
"maxItems": 1000
},
"steps": {
"default": 5,
"type": [
"number"
],
"minimum": 1,
"maximum": 500
}
},
"required": [
"dataset"
]
}
}
}
}
}
},
"/ai/sentiment": {
"post": {
"summary": "POST /ai/sentiment",
"operationId": "post_ai_sentiment",
"parameters": [],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
},
"requestBody": {
"required": true,
"content": {
"application/json": {
"schema": {
"type": [
"object"
],
"properties": {
"text": {
"type": [
"string"
],
"maxLength": 2000
}
},
"required": [
"text"
]
}
}
}
}
},
"get": {
"summary": "GET /ai/sentiment",
"operationId": "get_ai_sentiment",
"parameters": [
{
"name": "text",
"in": "query",
"required": true,
"schema": {
"type": [
"string"
],
"maxLength": 2000
}
}
],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
}
}
},
"/ai/sql": {
"post": {
"summary": "POST /ai/sql",
"operationId": "post_ai_sql",
"parameters": [],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
},
"requestBody": {
"required": true,
"content": {
"application/json": {
"schema": {
"type": [
"object"
],
"properties": {
"prompt": {
"type": [
"string"
],
"minLength": 10
},
"sql_schema": {
"type": [
"string"
]
},
"file_store_key": {
"type": [
"string"
]
},
"database": {
"type": [
"string"
],
"enum": [
"postgresql",
"mysql",
"sqlite"
]
}
},
"required": [
"prompt"
]
}
}
}
}
}
},
"/ai/summary": {
"get": {
"summary": "GET /ai/summary",
"operationId": "get_ai_summary",
"parameters": [
{
"name": "text",
"in": "query",
"required": false,
"schema": {
"type": [
"string",
"null"
],
"maxLength": 300000
}
},
{
"name": "url",
"in": "query",
"required": false,
"schema": {
"type": [
"string",
"null"
]
}
},
{
"name": "file_store_key",
"in": "query",
"required": false,
"schema": {
"type": [
"string",
"null"
]
}
},
{
"name": "type",
"in": "query",
"required": false,
"schema": {
"default": "text",
"type": [
"string"
],
"enum": [
"text",
"points"
]
}
},
{
"name": "max_points",
"in": "query",
"required": false,
"schema": {
"type": [
"number",
"null"
],
"minimum": 2,
"maximum": 100
}
},
{
"name": "max_characters",
"in": "query",
"required": false,
"schema": {
"type": [
"number",
"null"
],
"minimum": 100,
"maximum": 50000
}
}
],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
}
},
"post": {
"summary": "POST /ai/summary",
"operationId": "post_ai_summary",
"parameters": [],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
},
"requestBody": {
"required": true,
"content": {
"application/json": {
"schema": {
"type": [
"object"
],
"properties": {
"text": {
"type": [
"string",
"null"
],
"maxLength": 300000
},
"url": {
"type": [
"string",
"null"
]
},
"file_store_key": {
"type": [
"string",
"null"
]
},
"type": {
"default": "text",
"type": [
"string"
],
"enum": [
"text",
"points"
]
},
"max_points": {
"type": [
"number",
"null"
],
"minimum": 2,
"maximum": 100
},
"max_characters": {
"type": [
"number",
"null"
],
"minimum": 100,
"maximum": 50000
}
},
"required": []
}
}
}
}
}
},
"/ai/transcribe/hook": {
"post": {
"summary": "POST /ai/transcribe/hook",
"operationId": "post_ai_transcribe_hook",
"parameters": [],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
}
}
},
"/ai/tts/clone/{voice_id}": {
"delete": {
"summary": "DELETE /ai/tts/clone/{voice_id}",
"operationId": "delete_ai_tts_clone__voice_id_",
"parameters": [
{
"name": "voice_id",
"in": "path",
"required": true,
"schema": {
"type": "string"
}
}
],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
}
}
},
"/ai/tts/clone": {
"post": {
"summary": "POST /ai/tts/clone",
"operationId": "post_ai_tts_clone",
"parameters": [],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
}
},
"get": {
"summary": "GET /ai/tts/clone",
"operationId": "get_ai_tts_clone",
"parameters": [],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
}
}
},
"/ai/tts": {
"post": {
"summary": "POST /ai/tts",
"operationId": "post_ai_tts",
"parameters": [],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
}
}
},
"/ping": {
"get": {
"summary": "GET /ping",
"operationId": "get_ping",
"parameters": [],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
}
}
},
"/store/file": {
"post": {
"summary": "POST /store/file",
"operationId": "post_store_file",
"parameters": [],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
},
"requestBody": {
"required": true,
"content": {
"application/json": {
"schema": {
"type": [
"object"
],
"properties": {
"key": {
"type": [
"string",
"null"
]
},
"overwrite": {
"default": "false",
"type": [
"string"
]
},
"temp_public_url": {
"default": "false",
"type": [
"string"
]
}
},
"required": []
}
}
}
}
}
},
"/store/file/read/{key}": {
"get": {
"summary": "GET /store/file/read/{key}",
"operationId": "get_store_file_read__key_",
"parameters": [
{
"name": "key",
"in": "path",
"required": true,
"schema": {
"type": "string"
}
}
],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
}
},
"delete": {
"summary": "DELETE /store/file/read/{key}",
"operationId": "delete_store_file_read__key_",
"parameters": [
{
"name": "key",
"in": "path",
"required": true,
"schema": {
"type": "string"
}
}
],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
}
},
"head": {
"summary": "HEAD /store/file/read/{key}",
"operationId": "head_store_file_read__key_",
"parameters": [
{
"name": "key",
"in": "path",
"required": true,
"schema": {
"type": "string"
}
}
],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
}
}
},
"/store/file/signed_upload_url": {
"get": {
"summary": "GET /store/file/signed_upload_url",
"operationId": "get_store_file_signed_upload_url",
"parameters": [
{
"name": "key",
"in": "query",
"required": false,
"schema": {
"type": [
"string",
"null"
]
}
},
{
"name": "overwrite",
"in": "query",
"required": false,
"schema": {
"default": "false",
"type": [
"string"
]
}
},
{
"name": "temp_public_url",
"in": "query",
"required": false,
"schema": {
"default": "false",
"type": [
"string"
]
}
}
],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
}
}
},
"/validate/email": {
"get": {
"summary": "GET /validate/email",
"operationId": "get_validate_email",
"parameters": [
{
"name": "email",
"in": "query",
"required": true,
"schema": {
"type": [
"string"
]
}
}
],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
}
}
},
"/validate/nsfw": {
"post": {
"summary": "POST /validate/nsfw",
"operationId": "post_validate_nsfw",
"parameters": [],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
},
"requestBody": {
"required": true,
"content": {
"application/json": {
"schema": {
"type": [
"object"
],
"properties": {
"url": {
"type": [
"string",
"null"
]
},
"file_store_key": {
"type": [
"string",
"null"
]
}
},
"required": []
}
}
}
}
}
},
"/validate/profanity": {
"post": {
"summary": "POST /validate/profanity",
"operationId": "post_validate_profanity",
"parameters": [],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
},
"requestBody": {
"required": true,
"content": {
"application/json": {
"schema": {
"type": [
"object"
],
"properties": {
"text": {
"type": [
"string"
]
},
"censor_replacement": {
"default": "*",
"type": [
"string"
]
}
},
"required": [
"text"
]
}
}
}
}
}
},
"/validate/spam_check": {
"post": {
"summary": "POST /validate/spam_check",
"operationId": "post_validate_spam_check",
"parameters": [],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
},
"requestBody": {
"required": true,
"content": {
"application/json": {
"schema": {
"type": [
"object"
],
"properties": {
"text": {
"oneOf": [
{
"type": [
"string"
],
"minLength": 5,
"maxLength": 5000
},
{
"type": [
"array"
],
"items": {
"type": [
"string"
],
"minLength": 5,
"maxLength": 5000
},
"minItems": 1,
"maxItems": 10
}
]
}
},
"required": [
"text"
]
}
}
}
}
}
},
"/validate/spell_check": {
"post": {
"summary": "POST /validate/spell_check",
"operationId": "post_validate_spell_check",
"parameters": [],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
},
"requestBody": {
"required": true,
"content": {
"application/json": {
"schema": {
"type": [
"object"
],
"properties": {
"text": {
"type": [
"string"
]
},
"language_code": {
"default": "en",
"type": [
"string"
]
}
},
"required": [
"text"
]
}
}
}
}
}
},
"/ai/image_generation": {
"post": {
"summary": "POST /ai/image_generation",
"operationId": "post_ai_image_generation",
"parameters": [],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
},
"requestBody": {
"required": true,
"content": {
"application/json": {
"schema": {
"type": [
"object"
],
"properties": {
"prompt": {
"type": [
"string"
],
"minLength": 1,
"maxLength": 5000
},
"aspect_ratio": {
"default": "1:1",
"type": [
"string"
],
"enum": [
"1:1",
"16:9",
"21:9",
"3:2",
"2:3",
"4:5",
"5:4",
"3:4",
"4:3",
"9:16",
"9:21"
]
},
"width": {
"type": [
"number",
"null"
],
"minimum": 256,
"maximum": 1920
},
"height": {
"type": [
"number",
"null"
],
"minimum": 256,
"maximum": 1920
},
"steps": {
"default": 4,
"type": [
"number"
],
"minimum": 1,
"maximum": 90
},
"output_format": {
"default": "png",
"type": [
"string"
],
"enum": [
"png",
"svg"
]
},
"advance_config": {
"type": [
"object",
"null"
],
"properties": {
"negative_prompt": {
"type": [
"string",
"null"
]
},
"guidance": {
"type": [
"number",
"null"
],
"maximum": 28
},
"seed": {
"type": [
"number",
"null"
]
}
}
},
"url": {
"type": [
"string",
"null"
]
},
"file_store_key": {
"type": [
"string",
"null"
]
}
},
"required": [
"prompt"
]
}
}
}
}
}
},
"/ai/scrape": {
"post": {
"summary": "POST /ai/scrape",
"operationId": "post_ai_scrape",
"parameters": [],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
},
"requestBody": {
"required": true,
"content": {
"application/json": {
"schema": {
"type": [
"object"
],
"properties": {
"html": {
"type": [
"string",
"null"
]
},
"url": {
"type": [
"string",
"null"
]
},
"selectors": {
"type": [
"array",
"null"
],
"items": {
"type": [
"string"
]
},
"maxItems": 5
},
"width": {
"default": 1920,
"type": [
"number"
]
},
"height": {
"default": 1080,
"type": [
"number"
]
},
"scale": {
"default": 1,
"type": [
"number"
],
"minimum": 1
},
"is_mobile": {
"default": false,
"type": [
"boolean"
]
},
"size_preset": {
"type": [
"string",
"null"
],
"enum": [
"QVGA",
"VGA",
"SVGA",
"HD",
"SXGA",
"HD+",
"FHD",
"2K",
"2K QHD",
"5K",
"4K UHD",
"8K UHD",
"iPhone 13 Pro",
"iPhone XR",
"iPhone XS",
"iPhone XS Max",
"iPhone X",
"iPhone 8 Plus",
"iPhone 8",
"iPhone 7 Plus",
"iPhone 7",
"iPhone 6 Plus/6S Plus",
"iPhone 6/6S",
"iPhone 5",
"iPod Touch",
"iPad Pro",
"iPad Third & Fourth Generation",
"iPad Air 1 & 2",
"iPad Mini 2 & 3",
"iPad Mini",
"Nexus 6P",
"Nexus 5X",
"Google Pixel 7 Pro",
"Google Pixel 4 XL",
"Google Pixel 4",
"Google Pixel 3a XL",
"Google Pixel 3a",
"Google Pixel 3 XL",
"Google Pixel 3",
"Google Pixel 2 XL",
"Google Pixel XL",
"Google Pixel",
"Samsung Galaxy Note 10+",
"Samsung Galaxy Note 10",
"Samsung Galaxy Note 9",
"Samsung Galaxy Note 5",
"LG G5",
"One Plus 3",
"Samsung Galaxy S9+",
"Samsung Galaxy S9",
"Samsung Galaxy S8+",
"Samsung Galaxy S8",
"Samsung Galaxy S7 Edge",
"Samsung Galaxy S7",
"Nexus 9",
"Nexus 7 (2013)",
"Pixel C",
"Samsung Galaxy Tab 10",
"Chromebook Pixel",
"Letter",
"Legal",
"Tabloid",
"Ledger",
"A0",
"A1",
"A2",
"A3",
"A4",
"A5",
"A6",
"Letter landscape",
"Legal landscape",
"Tabloid landscape",
"Ledger landscape",
"A0 landscape",
"A1 landscape",
"A2 landscape",
"A3 landscape",
"A4 landscape",
"A5 landscape",
"A6 landscape"
]
},
"cookies": {
"type": [
"array",
"null"
],
"items": {
"type": [
"object"
],
"properties": {
"name": {
"type": [
"string"
]
},
"value": {
"type": [
"string"
]
},
"domain": {
"type": [
"string"
]
},
"url": {
"type": [
"string"
]
},
"secure": {
"type": [
"boolean"
]
},
"httpOnly": {
"type": [
"boolean"
]
},
"sameParty": {
"type": [
"boolean"
]
},
"expires": {
"type": [
"number"
]
},
"priority": {
"type": [
"string"
],
"enum": [
"Low",
"High",
"Medium"
]
}
},
"required": [
"name",
"value"
]
}
},
"http_headers": {
"type": [
"object",
"null"
],
"additionalProperties": {
"type": [
"string"
]
}
},
"reject_request_pattern": {
"type": [
"array",
"null"
],
"items": {
"type": [
"string"
]
}
},
"goto_options": {
"type": [
"object",
"null"
],
"properties": {
"timeout": {
"default": 30000,
"type": [
"number"
],
"minimum": 1,
"maximum": 120000
},
"wait_until": {
"default": "networkidle2",
"type": [
"string"
],
"enum": [
"load",
"domcontentloaded",
"networkidle0",
"networkidle2"
]
}
},
"additionalProperties": true
},
"wait_for": {
"type": [
"object",
"null"
],
"properties": {
"mode": {
"type": [
"string"
],
"enum": [
"selector",
"timeout",
"function"
]
},
"value": {
"oneOf": [
{
"type": [
"string"
]
},
{
"type": [
"number"
],
"maximum": 60000
}
]
}
},
"required": [
"mode",
"value"
]
},
"advance_config": {
"type": [
"object",
"null"
],
"properties": {
"console": {
"type": [
"boolean"
]
},
"network": {
"type": [
"boolean"
]
},
"cookies": {
"type": [
"boolean"
]
}
}
},
"force_rotate_proxy": {
"type": [
"boolean"
]
},
"byo_proxy": {
"type": [
"object",
"null"
],
"properties": {
"server": {
"type": [
"string"
]
},
"auth": {
"type": [
"object"
],
"properties": {
"username": {
"type": [
"string"
]
},
"password": {
"type": [
"string"
]
}
},
"required": [
"username",
"password"
]
}
},
"required": [
"server"
]
},
"element_prompts": {
"type": [
"array",
"null"
],
"items": {
"type": [
"string"
]
},
"maxItems": 5
},
"root_element_selector": {
"default": "main",
"type": [
"string"
]
},
"page_position": {
"default": 1,
"type": [
"number"
],
"minimum": 1
}
},
"required": []
}
}
}
}
}
},
"/ai/transcribe": {
"post": {
"summary": "POST /ai/transcribe",
"operationId": "post_ai_transcribe",
"parameters": [],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
},
"requestBody": {
"required": true,
"content": {
"application/json": {
"schema": {
"type": [
"object"
],
"properties": {
"url": {
"type": [
"string"
]
},
"file_store_key": {
"type": [
"string"
]
},
"language": {
"type": [
"string"
],
"enum": [
"af",
"am",
"ar",
"as",
"az",
"ba",
"be",
"bg",
"bn",
"bo",
"br",
"bs",
"ca",
"ch",
"co",
"cs",
"cy",
"da",
"de",
"dv",
"dz",
"el",
"en",
"eo",
"es",
"et",
"eu",
"fa",
"ff",
"fi",
"fj",
"fo",
"fr",
"fy",
"ga",
"gd",
"gl",
"gn",
"gu",
"gv",
"ha",
"he",
"hi",
"hr",
"ht",
"hu",
"hy",
"id",
"ig",
"is",
"it",
"iu",
"ja",
"jv",
"ka",
"kg",
"ki",
"kj",
"kk",
"kl",
"km",
"kn",
"ko",
"kr",
"ks",
"ku",
"kv",
"kw",
"ky",
"la",
"lb",
"lg",
"li",
"ln",
"lo",
"lt",
"lu",
"lv",
"mg",
"mh",
"mi",
"mk",
"ml",
"mn",
"mo",
"mr",
"ms",
"mt",
"my",
"na",
"nb",
"nd",
"ne",
"ng",
"nl",
"nn",
"no",
"nr",
"nv",
"ny",
"oc",
"oj",
"om",
"or",
"os",
"pa",
"pi",
"pl",
"ps",
"pt",
"qu",
"rm",
"rn",
"ro",
"ru",
"rw",
"sa",
"sc",
"sd",
"se",
"sg",
"sh",
"si",
"sk",
"sl",
"sm",
"sn",
"so",
"sq",
"sr",
"ss",
"st",
"su",
"sv",
"sw",
"ta",
"te",
"tg",
"th",
"ti",
"tk",
"tl",
"tn",
"to",
"tr",
"ts",
"tt",
"tw",
"ty",
"ug",
"uk",
"ur",
"uz",
"ve",
"vi",
"vo",
"wo",
"xh",
"yi",
"yo",
"zh",
"zh-TW",
"zu"
]
},
"translate": {
"default": false,
"oneOf": [
{
"type": [
"boolean"
]
},
{
"type": [
"string"
]
}
]
},
"by_speaker": {
"default": false,
"oneOf": [
{
"type": [
"boolean"
]
},
{
"type": [
"string"
]
}
]
},
"webhook_url": {
"type": [
"string"
]
},
"batch_size": {
"default": 40,
"type": [
"number"
],
"minimum": 1,
"maximum": 100
},
"chunk_duration": {
"default": 3,
"type": [
"number"
],
"minimum": 1,
"maximum": 15
}
},
"required": []
}
}
}
}
}
},
"/ai/translate/image": {
"post": {
"summary": "POST /ai/translate/image",
"operationId": "post_ai_translate_image",
"parameters": [],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
},
"requestBody": {
"required": true,
"content": {
"application/json": {
"schema": {
"type": [
"object"
],
"properties": {
"url": {
"type": [
"string"
]
},
"file_store_key": {
"type": [
"string"
]
},
"target_language": {
"type": [
"string"
],
"enum": [
"af",
"am",
"ar",
"as",
"az",
"ba",
"be",
"bg",
"bn",
"bo",
"br",
"bs",
"ca",
"ch",
"co",
"cs",
"cy",
"da",
"de",
"dv",
"dz",
"el",
"en",
"eo",
"es",
"et",
"eu",
"fa",
"ff",
"fi",
"fj",
"fo",
"fr",
"fy",
"ga",
"gd",
"gl",
"gn",
"gu",
"gv",
"ha",
"he",
"hi",
"hr",
"ht",
"hu",
"hy",
"id",
"ig",
"is",
"it",
"iu",
"ja",
"jv",
"ka",
"kg",
"ki",
"kj",
"kk",
"kl",
"km",
"kn",
"ko",
"kr",
"ks",
"ku",
"kv",
"kw",
"ky",
"la",
"lb",
"lg",
"li",
"ln",
"lo",
"lt",
"lu",
"lv",
"mg",
"mh",
"mi",
"mk",
"ml",
"mn",
"mo",
"mr",
"ms",
"mt",
"my",
"na",
"nb",
"nd",
"ne",
"ng",
"nl",
"nn",
"no",
"nr",
"nv",
"ny",
"oc",
"oj",
"om",
"or",
"os",
"pa",
"pi",
"pl",
"ps",
"pt",
"qu",
"rm",
"rn",
"ro",
"ru",
"rw",
"sa",
"sc",
"sd",
"se",
"sg",
"sh",
"si",
"sk",
"sl",
"sm",
"sn",
"so",
"sq",
"sr",
"ss",
"st",
"su",
"sv",
"sw",
"ta",
"te",
"tg",
"th",
"ti",
"tk",
"tl",
"tn",
"to",
"tr",
"ts",
"tt",
"tw",
"ty",
"ug",
"uk",
"ur",
"uz",
"ve",
"vi",
"vo",
"wo",
"xh",
"yi",
"yo",
"zh",
"zh-TW",
"zu"
]
}
},
"required": [
"target_language"
]
}
}
}
}
}
},
"/ai/translate": {
"post": {
"summary": "POST /ai/translate",
"operationId": "post_ai_translate",
"parameters": [],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
},
"requestBody": {
"required": true,
"content": {
"application/json": {
"schema": {
"type": [
"object"
],
"properties": {
"text": {
"oneOf": [
{
"type": [
"string"
],
"minLength": 1,
"maxLength": 5000
},
{
"type": [
"array"
],
"items": {
"type": [
"string"
],
"minLength": 1,
"maxLength": 5000
},
"minItems": 1,
"maxItems": 100
}
]
},
"current_language": {
"type": [
"string",
"null"
],
"enum": [
"af",
"am",
"ar",
"as",
"az",
"ba",
"be",
"bg",
"bn",
"bo",
"br",
"bs",
"ca",
"ch",
"co",
"cs",
"cy",
"da",
"de",
"dv",
"dz",
"el",
"en",
"eo",
"es",
"et",
"eu",
"fa",
"ff",
"fi",
"fj",
"fo",
"fr",
"fy",
"ga",
"gd",
"gl",
"gn",
"gu",
"gv",
"ha",
"he",
"hi",
"hr",
"ht",
"hu",
"hy",
"id",
"ig",
"is",
"it",
"iu",
"ja",
"jv",
"ka",
"kg",
"ki",
"kj",
"kk",
"kl",
"km",
"kn",
"ko",
"kr",
"ks",
"ku",
"kv",
"kw",
"ky",
"la",
"lb",
"lg",
"li",
"ln",
"lo",
"lt",
"lu",
"lv",
"mg",
"mh",
"mi",
"mk",
"ml",
"mn",
"mo",
"mr",
"ms",
"mt",
"my",
"na",
"nb",
"nd",
"ne",
"ng",
"nl",
"nn",
"no",
"nr",
"nv",
"ny",
"oc",
"oj",
"om",
"or",
"os",
"pa",
"pi",
"pl",
"ps",
"pt",
"qu",
"rm",
"rn",
"ro",
"ru",
"rw",
"sa",
"sc",
"sd",
"se",
"sg",
"sh",
"si",
"sk",
"sl",
"sm",
"sn",
"so",
"sq",
"sr",
"ss",
"st",
"su",
"sv",
"sw",
"ta",
"te",
"tg",
"th",
"ti",
"tk",
"tl",
"tn",
"to",
"tr",
"ts",
"tt",
"tw",
"ty",
"ug",
"uk",
"ur",
"uz",
"ve",
"vi",
"vo",
"wo",
"xh",
"yi",
"yo",
"zh",
"zh-TW",
"zu"
]
},
"target_language": {
"type": [
"string"
],
"enum": [
"af",
"am",
"ar",
"as",
"az",
"ba",
"be",
"bg",
"bn",
"bo",
"br",
"bs",
"ca",
"ch",
"co",
"cs",
"cy",
"da",
"de",
"dv",
"dz",
"el",
"en",
"eo",
"es",
"et",
"eu",
"fa",
"ff",
"fi",
"fj",
"fo",
"fr",
"fy",
"ga",
"gd",
"gl",
"gn",
"gu",
"gv",
"ha",
"he",
"hi",
"hr",
"ht",
"hu",
"hy",
"id",
"ig",
"is",
"it",
"iu",
"ja",
"jv",
"ka",
"kg",
"ki",
"kj",
"kk",
"kl",
"km",
"kn",
"ko",
"kr",
"ks",
"ku",
"kv",
"kw",
"ky",
"la",
"lb",
"lg",
"li",
"ln",
"lo",
"lt",
"lu",
"lv",
"mg",
"mh",
"mi",
"mk",
"ml",
"mn",
"mo",
"mr",
"ms",
"mt",
"my",
"na",
"nb",
"nd",
"ne",
"ng",
"nl",
"nn",
"no",
"nr",
"nv",
"ny",
"oc",
"oj",
"om",
"or",
"os",
"pa",
"pi",
"pl",
"ps",
"pt",
"qu",
"rm",
"rn",
"ro",
"ru",
"rw",
"sa",
"sc",
"sd",
"se",
"sg",
"sh",
"si",
"sk",
"sl",
"sm",
"sn",
"so",
"sq",
"sr",
"ss",
"st",
"su",
"sv",
"sw",
"ta",
"te",
"tg",
"th",
"ti",
"tk",
"tl",
"tn",
"to",
"tr",
"ts",
"tt",
"tw",
"ty",
"ug",
"uk",
"ur",
"uz",
"ve",
"vi",
"vo",
"wo",
"xh",
"yi",
"yo",
"zh",
"zh-TW",
"zu"
]
}
},
"required": [
"text",
"target_language"
]
}
}
}
}
}
},
"/embedding": {
"post": {
"summary": "POST /embedding",
"operationId": "post_embedding",
"parameters": [],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
},
"requestBody": {
"required": true,
"content": {
"application/json": {
"schema": {
"type": [
"object"
],
"properties": {
"text": {
"type": [
"string",
"null"
]
},
"url": {
"type": [
"string",
"null"
]
},
"file_store_key": {
"type": [
"string",
"null"
]
},
"file_content": {
"type": [
"null"
]
},
"type": {
"type": [
"string"
],
"enum": [
"text",
"text-other",
"image",
"audio",
"pdf"
]
},
"token_overflow_mode": {
"default": "error",
"type": [
"string"
],
"enum": [
"truncate",
"error"
]
}
},
"required": [
"type"
]
}
}
}
}
}
},
"/prompt_engine/{id}": {
"post": {
"summary": "POST /prompt_engine/{id}",
"operationId": "post_prompt_engine__id_",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string"
}
}
],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
},
"requestBody": {
"required": true,
"content": {
"application/json": {
"schema": {
"type": [
"object"
],
"properties": {
"id": {
"type": [
"string"
],
"format": "uuid"
},
"input_values": {
"type": [
"object",
"null"
],
"additionalProperties": {
"type": [
"string"
],
"minLength": 1,
"maxLength": 300
}
},
"stream": {
"default": false,
"type": [
"boolean"
]
}
},
"required": [
"id"
]
}
}
}
}
},
"delete": {
"summary": "DELETE /prompt_engine/{id}",
"operationId": "delete_prompt_engine__id_",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string"
}
}
],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
}
},
"get": {
"summary": "GET /prompt_engine/{id}",
"operationId": "get_prompt_engine__id_",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string"
}
},
{
"name": "input_values",
"in": "query",
"required": false,
"schema": {
"type": [
"object",
"null"
],
"additionalProperties": {
"type": [
"string"
],
"minLength": 1,
"maxLength": 300
}
}
},
{
"name": "stream",
"in": "query",
"required": false,
"schema": {
"default": false,
"type": [
"boolean"
]
}
}
],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
}
}
},
"/prompt_engine": {
"post": {
"summary": "POST /prompt_engine",
"operationId": "post_prompt_engine",
"parameters": [],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
}
},
"get": {
"summary": "GET /prompt_engine",
"operationId": "get_prompt_engine",
"parameters": [],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
}
}
},
"/prompt_engine/run": {
"post": {
"summary": "POST /prompt_engine/run",
"operationId": "post_prompt_engine_run",
"parameters": [],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
}
}
},
"/vocr": {
"post": {
"summary": "POST /vocr",
"operationId": "post_vocr",
"parameters": [],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
},
"requestBody": {
"required": true,
"content": {
"application/json": {
"schema": {
"type": [
"object"
],
"properties": {
"url": {
"type": [
"string"
]
},
"file_store_key": {
"type": [
"string"
]
},
"prompt": {
"default": "Describe the image in detail",
"oneOf": [
{
"type": [
"string"
],
"minLength": 1
},
{
"type": [
"array"
],
"items": {
"type": [
"string"
]
},
"minItems": 1,
"maxItems": 10
}
]
},
"page_range": {
"type": [
"array",
"null"
],
"items": {
"type": [
"number"
],
"minimum": 1
},
"minItems": 2,
"maxItems": 2
}
},
"required": []
}
}
}
}
}
},
"/web/html_to_any": {
"post": {
"summary": "POST /web/html_to_any",
"operationId": "post_web_html_to_any",
"parameters": [],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
},
"requestBody": {
"required": true,
"content": {
"application/json": {
"schema": {
"type": [
"object"
],
"properties": {
"html": {
"type": [
"string",
"null"
]
},
"url": {
"type": [
"string",
"null"
]
},
"goto_options": {
"type": [
"object",
"null"
],
"properties": {
"timeout": {
"type": [
"number",
"null"
],
"minimum": 1,
"maximum": 15000
},
"wait_until": {
"type": [
"string",
"null"
],
"enum": [
"load",
"domcontentloaded",
"networkidle0",
"networkidle2"
]
}
},
"additionalProperties": true
},
"full_page": {
"default": false,
"type": [
"boolean"
]
},
"omit_background": {
"default": false,
"type": [
"boolean"
]
},
"quality": {
"default": 75,
"type": [
"number"
]
},
"type": {
"default": "png",
"type": [
"string"
],
"enum": [
"png",
"jpeg",
"webp",
"pdf"
]
},
"width": {
"default": 1920,
"type": [
"number"
]
},
"height": {
"default": 1080,
"type": [
"number"
]
},
"scale": {
"default": 1,
"type": [
"number"
],
"minimum": 1
},
"is_mobile": {
"default": false,
"type": [
"boolean"
]
},
"dark_mode": {
"default": false,
"type": [
"boolean"
]
},
"use_graphic_renderer": {
"default": false,
"type": [
"boolean"
]
},
"size_preset": {
"type": [
"string",
"null"
],
"enum": [
"QVGA",
"VGA",
"SVGA",
"HD",
"SXGA",
"HD+",
"FHD",
"2K",
"2K QHD",
"5K",
"4K UHD",
"8K UHD",
"iPhone 13 Pro",
"iPhone XR",
"iPhone XS",
"iPhone XS Max",
"iPhone X",
"iPhone 8 Plus",
"iPhone 8",
"iPhone 7 Plus",
"iPhone 7",
"iPhone 6 Plus/6S Plus",
"iPhone 6/6S",
"iPhone 5",
"iPod Touch",
"iPad Pro",
"iPad Third & Fourth Generation",
"iPad Air 1 & 2",
"iPad Mini 2 & 3",
"iPad Mini",
"Nexus 6P",
"Nexus 5X",
"Google Pixel 7 Pro",
"Google Pixel 4 XL",
"Google Pixel 4",
"Google Pixel 3a XL",
"Google Pixel 3a",
"Google Pixel 3 XL",
"Google Pixel 3",
"Google Pixel 2 XL",
"Google Pixel XL",
"Google Pixel",
"Samsung Galaxy Note 10+",
"Samsung Galaxy Note 10",
"Samsung Galaxy Note 9",
"Samsung Galaxy Note 5",
"LG G5",
"One Plus 3",
"Samsung Galaxy S9+",
"Samsung Galaxy S9",
"Samsung Galaxy S8+",
"Samsung Galaxy S8",
"Samsung Galaxy S7 Edge",
"Samsung Galaxy S7",
"Nexus 9",
"Nexus 7 (2013)",
"Pixel C",
"Samsung Galaxy Tab 10",
"Chromebook Pixel",
"Letter",
"Legal",
"Tabloid",
"Ledger",
"A0",
"A1",
"A2",
"A3",
"A4",
"A5",
"A6",
"Letter landscape",
"Legal landscape",
"Tabloid landscape",
"Ledger landscape",
"A0 landscape",
"A1 landscape",
"A2 landscape",
"A3 landscape",
"A4 landscape",
"A5 landscape",
"A6 landscape"
]
},
"pdf_display_header_footer": {
"default": false,
"type": [
"boolean"
]
},
"pdf_print_background": {
"default": false,
"type": [
"boolean"
]
},
"pdf_page_range": {
"type": [
"string",
"null"
]
}
},
"required": []
}
}
}
}
}
},
"/web/search": {
"post": {
"summary": "POST /web/search",
"operationId": "post_web_search",
"parameters": [],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
},
"requestBody": {
"required": true,
"content": {
"application/json": {
"schema": {
"type": [
"object"
],
"properties": {
"query": {
"type": [
"string"
],
"minLength": 1,
"maxLength": 400
},
"spell_check": {
"oneOf": [
{
"default": "true",
"type": [
"string"
]
},
{
"type": [
"boolean"
]
}
]
},
"safe_search": {
"default": "moderate",
"type": [
"string"
],
"enum": [
"strict",
"moderate",
"off"
]
},
"ai_overview": {
"oneOf": [
{
"default": "true",
"type": [
"string"
]
},
{
"type": [
"boolean"
]
}
]
},
"byo_urls": {
"type": [
"array",
"null"
],
"items": {
"type": [
"string"
]
},
"maxItems": 3
},
"country_code": {
"type": [
"string",
"null"
],
"enum": [
"BEN",
"ARG",
"AGO",
"ARM",
"IRN",
"NRU",
"ITA",
"MLI",
"AUS",
"UGA",
"AUT",
"TUR",
"AND",
"AFG",
"ALB",
"DZA",
"ASM",
"AZE",
"BHR",
"BGD",
"BRB",
"BLR",
"BEL",
"BTN",
"BOL",
"BWA",
"BRA",
"BRN",
"BGR",
"BFA",
"KHM",
"CMR",
"CAN",
"CPV",
"CAF",
"TCD",
"CHL",
"CHN",
"COL",
"COK",
"CRI",
"HRV",
"CUB",
"CYP",
"CZE",
"DNK",
"DMA",
"DOM",
"ECU",
"EGY",
"EST",
"ETH",
"SLV",
"FIN",
"FRA",
"GAB",
"GEO",
"IRL",
"DEU",
"GHA",
"GRC",
"GRL",
"GTM",
"GIN",
"GNB",
"GUY",
"HTI",
"HND",
"HUN",
"IND",
"IDN",
"IRQ",
"ISL",
"HKG",
"ISR",
"JAM",
"JPN",
"JOR",
"KAZ",
"KEN",
"KIR",
"KWT",
"KGZ",
"LAO",
"LVA",
"LBN",
"LSO",
"LBR",
"LBY",
"LIE",
"LTU",
"LUX",
"MAC",
"MDG",
"MWI",
"MYS",
"MDV",
"MLT",
"MUS",
"MEX",
"FSM",
"MDA",
"MCO",
"MNG",
"MNE",
"MAR",
"MOZ",
"MMR",
"NAM",
"NPL",
"NLD",
"NZL",
"NIC",
"NER",
"NGA",
"NIU",
"MKD",
"NOR",
"OMN",
"PAK",
"PAN",
"PRY",
"PER",
"PHL",
"POL",
"PRT",
"PRI",
"QAT",
"ROU",
"RUS",
"RWA",
"KNA",
"WSM",
"SMR",
"SAU",
"SEN",
"SRB",
"SYC",
"SLE",
"SVK",
"SVN",
"SLB",
"SOM",
"ZAF",
"SGP",
"KOR",
"SSD",
"ESP",
"LKA",
"SDN",
"SUR",
"SWE",
"CHE",
"SYR",
"TWN",
"TJK",
"TZA",
"THA",
"BHS",
"TGO",
"TON",
"TKM",
"UKR",
"ARE",
"GBR",
"USA",
"URY",
"UZB",
"VUT",
"VEN",
"VNM",
"TUN",
"ZMB",
"ZWE",
"BIH",
"COG",
"CIV",
"COD",
"DJI",
"GNQ",
"ERI",
"MRT",
"PNG",
"TTO",
"YEM",
"BLZ",
"BDI",
"COM",
"SWZ",
"GMB"
]
},
"auto_scrape": {
"oneOf": [
{
"default": "true",
"type": [
"string"
]
},
{
"type": [
"boolean"
]
}
]
},
"deep_research": {
"oneOf": [
{
"type": [
"string"
]
},
{
"type": [
"boolean"
]
}
],
"type": [
"null"
]
},
"deep_research_config": {
"type": [
"object",
"null"
],
"properties": {
"max_depth": {
"default": 3,
"type": [
"number"
]
},
"max_breadth": {
"default": 3,
"type": [
"number"
]
},
"max_output_tokens": {
"default": 32000,
"type": [
"number"
]
},
"target_output_tokens": {
"type": [
"number"
]
}
}
}
},
"required": [
"query"
]
}
}
}
}
}
},
"/web/search/suggest": {
"get": {
"summary": "GET /web/search/suggest",
"operationId": "get_web_search_suggest",
"parameters": [
{
"name": "query",
"in": "query",
"required": true,
"schema": {
"type": [
"string"
],
"minLength": 1,
"maxLength": 100
}
}
],
"responses": {
"200": {
"description": "Successful response",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"description": "Whether the request was successful"
},
"data": {
"type": "object",
"description": "Response data"
},
"error": {
"type": "object",
"description": "Error details if request failed",
"properties": {
"message": {
"type": "string",
"description": "Error message"
},
"code": {
"type": "string",
"description": "Error code"
}
}
}
}
}
}
}
},
"400": {
"description": "Bad Request - The request was malformed or contained invalid parameters",
"content": {
"application/json": {
"schema": {
"type": "object",
"properties": {
"success": {
"type": "boolean",
"example": false
},
"error": {
"type": "object",
"properties": {
"message": {
"type": "string"
},
"code": {
"type": "string"
}
}
}
}
}
}
}
},
"401": {
"description": "Unauthorized - Authentication credentials are missing or invalid"
},
"403": {
"description": "Forbidden - The request is not allowed"
},
"404": {
"description": "Not Found - The requested resource was not found"
},
"500": {
"description": "Internal Server Error - Something went wrong on our end"
}
}
}
}
},
"components": {
"securitySchemes": {
"apiKey": {
"type": "apiKey",
"in": "header",
"name": "x-api-key",
"description": "API key for authentication"
}
}
},
"security": [
{
"apiKey": []
}
]
}
